#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Edge —Å cookies
"""

import os
import sys
import json
import time
from tender_parser import create_driver, load_cookies_for_auth
import logging

logging.basicConfig(level=logging.INFO, format="%(asctime)s [%(levelname)s] %(message)s")
logger = logging.getLogger(__name__)

def test_cookies():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç cookies –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    
    print("\n" + "="*70)
    print("üîê –¢–ï–°–¢ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò EDGE –ß–ï–†–ï–ó COOKIES")
    print("="*70 + "\n")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ cookies
    cookies_file = os.path.expanduser("~/.yandex_parser_auth/cookies.json")
    
    if not os.path.exists(cookies_file):
        print(f"‚ùå –§–∞–π–ª cookies –Ω–µ –Ω–∞–π–¥–µ–Ω: {cookies_file}")
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ Edge –∏ –≤–æ–π–¥–∏—Ç–µ –Ω–∞ market.yandex.ru")
        print("2. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ cookies (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º 'EditThisCookie')")
        print("3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤: {cookies_file}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    try:
        with open(cookies_file, 'r', encoding='utf-8') as f:
            cookies_data = json.loads(f.read().strip())
        
        if isinstance(cookies_data, list):
            cookies = cookies_data
        elif isinstance(cookies_data, dict) and 'cookies' in cookies_data:
            cookies = cookies_data['cookies']
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç cookies —Ñ–∞–π–ª–∞")
            return False
        
        print(f"‚úÖ –§–∞–π–ª cookies –Ω–∞–π–¥–µ–Ω: {cookies_file}")
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ cookies: {len(cookies)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–∂–Ω—ã–µ cookies
        important_cookies = ['Session_id', 'sessionid2', 'yandexuid', 'i']
        found_important = []
        for cookie in cookies:
            if cookie.get('name') in important_cookies:
                found_important.append(cookie['name'])
        
        print(f"üîë –í–∞–∂–Ω—ã–µ cookies –Ω–∞–π–¥–µ–Ω—ã: {', '.join(found_important) if found_important else '–ù–ï–¢'}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è cookies: {e}")
        return False
    
    print("\n" + "-"*70)
    print("üöÄ –ó–ê–ü–£–°–ö –ë–†–ê–£–ó–ï–†–ê EDGE...")
    print("-"*70 + "\n")
    
    driver = None
    try:
        # –°–æ–∑–¥–∞—ë–º –¥—Ä–∞–π–≤–µ—Ä –≤ –≤–∏–¥–∏–º–æ–º —Ä–µ–∂–∏–º–µ
        driver = create_driver(headless=False, use_auth=True)
        print("‚úÖ –î—Ä–∞–π–≤–µ—Ä Edge —Å–æ–∑–¥–∞–Ω")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º cookies
        print("\nüì• –ó–∞–≥—Ä—É–∑–∫–∞ cookies...")
        auth_success = load_cookies_for_auth(driver)
        
        if auth_success:
            print("‚úÖ Cookies –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print("\n‚è≥ –û–∂–∏–¥–∞–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
            print("   (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –ª–∏ –≤—ã)")
            time.sleep(5)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π URL
            current_url = driver.current_url
            print(f"\nüîó –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {current_url}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
                page_source = driver.page_source
                
                if '–¥–ª—è —é—Ä–ª–∏—Ü' in page_source.lower() or '–¥–ª—è –±–∏–∑–Ω–µ—Å–∞' in page_source.lower():
                    print("‚úÖ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê! (–Ω–∞–π–¥–µ–Ω –ø—Ä–∏–∑–Ω–∞–∫ –±–∏–∑–Ω–µ—Å-–∞–∫–∫–∞—É–Ω—Ç–∞)")
                elif '–≤–æ–π—Ç–∏' in page_source.lower() or 'sign in' in page_source.lower():
                    print("‚ö†Ô∏è –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ù–ï –£–î–ê–õ–ê–°–¨ (–Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏')")
                else:
                    print("‚ùì –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")
                    
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
            
            print("\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–Å–ù")
            print("üìå –ï—Å–ª–∏ –≤–∏–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã - –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print("üìå –ï—Å–ª–∏ –Ω–µ—Ç - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å cookies –∑–∞–Ω–æ–≤–æ")
            
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å cookies!")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False
        
    finally:
        if driver:
            print("\n‚è≥ –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
            time.sleep(10)
            try:
                driver.quit()
                print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")
            except:
                pass

if __name__ == "__main__":
    try:
        success = test_cookies()
        sys.exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\n\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
