# gui_run.py - –ò–°–ü–†–ê–í–õ–ï–ù–û

import tkinter as tk
import sys
import os

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ GUI –ø–∞—Ä—Å–µ—Ä–∞ Microsoft Edge...")
    
    try:
        import tkinter as tk
        from tkinter import ttk, filedialog, messagebox, scrolledtext
        print("‚úÖ GUI –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ GUI: {e}")
        print("üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ tkinter: apt-get install python3-tk (Linux)")
        return
    
    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è msedgedriver (PATH/ENV/–ª–æ–∫–∞–ª—å–Ω–æ)
    def _check_driver():
        candidates = [
            os.path.join("browserdriver", "msedgedriver"),
            os.path.join("browserdriver", "msedgedriver.exe"),
        ]
        env_driver = os.environ.get("MSEDGEDRIVER")
        if env_driver and os.path.exists(env_driver):
            return env_driver
        try:
            import shutil as _shutil
            which_path = _shutil.which("msedgedriver")
            if which_path:
                return which_path
        except Exception:
            pass
        for c in candidates:
            if os.path.exists(c):
                return c
        return None

    driver_found = _check_driver()
    if driver_found:
        print(f"‚úÖ Edge WebDriver –Ω–∞–π–¥–µ–Ω: {driver_found}")
    else:
        print("‚ùå Edge WebDriver –ù–ï –ù–ê–ô–î–ï–ù (PATH/$MSEDGEDRIVER/./browserdriver)")
    
    cookies_file = os.path.expanduser("~/.yandex_parser_auth/cookies.json")
    if os.path.exists(cookies_file):
        print("‚úÖ Cookies –¥–ª—è —é—Ä–ª–∏—Ü –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print("‚ùå Cookies –¥–ª—è —é—Ä–ª–∏—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
    
    try:
        from concurrent.futures import ThreadPoolExecutor
        print("‚úÖ –ú–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")
    except ImportError:
        print("‚ùå –ú–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")
    
    try:
        # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ParserGUI –≤–º–µ—Å—Ç–æ YandexMarketGUI
        from gui_parser import ParserGUI
        print("‚úÖ GUI –ø–∞—Ä—Å–µ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ gui_parser: {e}")
        print("üìÅ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª gui_parser.py –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ")
        return
    
    root = tk.Tk()
    app = ParserGUI(root)
    print("üåê GUI –∑–∞–ø—É—â–µ–Ω –¥–ª—è Edge –ø–∞—Ä—Å–µ—Ä–∞")
    
    try:
        root.mainloop()
    except KeyboardInterrupt:
        print("\n‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ GUI: {e}")
        import traceback
        traceback.print_exc()
    finally:
        print("‚úÖ GUI –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    main()
